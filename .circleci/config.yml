version: 2.1

orbs:
  python: circleci/python@1.5.0
  docker: circleci/docker@2.0.1
  # node: circleci/node:16.

jobs:
  # lint:
  #   executor: python/default
  #   steps:
  #     - checkout
  #     - restore_cache:
  #         # key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
  #     - run:
  #         name: Install Python deps in a venv
  #         command: |
  #           python3 -m venv env
  #           . env/bin/activate
  #           pip install -r requirements.txt
  #     - run:
  #         name: "Run pylint"
  #         command: |
  #           . env/bin/activate
  #           pycodestyle app.py
  #     - save_cache:
  #         # key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
  #         paths:
  #           - "env"
  # test:
  #   executor: python/default
  #   steps:
  #     - checkout
  #     - restore_cache:
  #         key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
  #     - run:
  #         name: Install Python deps in a venv
  #         command: |
  #           python3 -m venv env
  #           . env/bin/activate
  #           pip install -r requirements.txt
  #     - run:
  #         name: "Run tests"
  #         command: |
  #           pip install -r requirements.txt
  #           python3 test.py
  #     - save_cache:
  #         key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
  #         paths:
  #           - "env"
  deploy:
    docker:
      - image: cimg/base:2022.08
    environment:
      # IMAGE_NAME: "$CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME"
      IMAGE_NAME: funkycadet/gitstars
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Images
          command: |
            docker build -t $IMAGE_NAME:v0.1.0 ./server
      - run:
          name: Deploy images to DockerHub
          command: |
            echo "$DOCKERHUB_PASSWORD" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:v0.1.0
      # - run:
      #     name: Deploy to DigitalOcean container
      #     command: |
      #       ssh -oStrictHostKeyChecking=no -v $DROPLET_USER@DROPLET_IP
      #       sudo docker pull $IMAGE_NAME:v0.1.1
      #       sudo
      # - run:
      #     name: Deploy to Heroku
      #     command: |
      #       docker pull $IMAGE_NAME:v0.1.0
      #       sudo curl https://cli-assets.heroku.com/install.sh | sh
      #       HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:login
      #       HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:push -a funkycadet-gitstars web
      #       HEROKU_API_KEY=${HEROKU_TOKEN} heroku container:release -a funkycadet-gitstars web

workflows:
  lint-test-build-deploy:
    jobs:
      # - lint
      # - test
      # - docker/publish:
          # deploy: false
          # image: $CIRCLE_PROJECT_USERNAME/$CIRCLE_PROJECT_REPONAME
      - deploy:
          context: gitstars
          # requires:
            # - lint
            # - test
            # - docker/publish
          filters:
            branches:
              only: main